# Adder works in unary.
# 0 = blank
# 1 = a digit
# 3 = opening paren
# 4 = closing paren
# 5 = addition operator

# value, state -> new_value, direction, new_state

# ( 3 + 2 )
0, 0 -> 3, r, 1
0, 1 -> 1, r, 2
0, 2 -> 1, r, 3
0, 3 -> 1, r, 4
0, 4 -> 1, r, 5
0, 5 -> 5, r, 6
0, 6 -> 1, r, 7
0, 7 -> 1, r, 8
0, 8 -> 4, r, 50


# state 50 adds two unary numbers to the left of it
# go left until it finds the addition operator
0, 50 -> 0, l, 50
1, 50 -> 1, l, 50
2, 50 -> 2, l, 50
3, 50 -> 3, l, 50
4, 50 -> 4, l, 50
5, 50 -> 1, r, 51

# Go right until the closing paren is found
0, 51 -> 0, r, 51
1, 51 -> 1, r, 51
2, 51 -> 2, r, 51
3, 51 -> 3, r, 51
5, 51 -> 5, r, 51
4, 51 -> 0, l, 52

# Replace digit with closing paren
1, 52 -> 4, l, 53

# go right for forever
0, 53 -> 0, r, 53
1, 53 -> 1, r, 53
2, 53 -> 2, r, 53
3, 53 -> 3, r, 53
4, 53 -> 4, r, 53
5, 53 -> 5, r, 53
